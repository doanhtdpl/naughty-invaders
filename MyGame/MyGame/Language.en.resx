<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BuyGame" xml:space="preserve">
    <value>::X Buy for 200ms points!</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Credits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="CreditsDesc" xml:space="preserve">
    <value>Wanna see who made this game?</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExitDesc" xml:space="preserve">
    <value>Back to Community Games</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New game</value>
  </data>
  <data name="NewGameDesc" xml:space="preserve">
    <value>Start a new game</value>
  </data>
  <data name="OptBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="OptBackDesc" xml:space="preserve">
    <value>Back to main menu</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="OptionsDesc" xml:space="preserve">
    <value>Configure options</value>
  </data>
  <data name="OptMusicVol" xml:space="preserve">
    <value>Music volume</value>
  </data>
  <data name="OptMusicVolDesc" xml:space="preserve">
    <value>Adjust the music volume</value>
  </data>
  <data name="OptNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OptNoDesc" xml:space="preserve">
    <value>Nope, I want to save energy</value>
  </data>
  <data name="OptRumble" xml:space="preserve">
    <value>Rumble</value>
  </data>
  <data name="OptRumbleDesc" xml:space="preserve">
    <value>Do u wanna rumble?</value>
  </data>
  <data name="OptSoundVol" xml:space="preserve">
    <value>Sound volume</value>
  </data>
  <data name="OptSoundVolDesc" xml:space="preserve">
    <value>Configure the sound volume</value>
  </data>
  <data name="OptYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="OptYesDesc" xml:space="preserve">
    <value>Sure!</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Paused game</value>
  </data>
  <data name="PressAToStart" xml:space="preserve">
    <value>Press ::A to start</value>
  </data>
  <data name="PressBToMenu" xml:space="preserve">
    <value>Press ::B to go to menu</value>
  </data>
  <data name="PressStartToCont" xml:space="preserve">
    <value>Press ::START to continue</value>
  </data>
  <data name="Scores" xml:space="preserve">
    <value>Awards</value>
  </data>
  <data name="ScoresDesc" xml:space="preserve">
    <value>See what imaginary awards you have</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="Thanks" xml:space="preserve">
    <value>Thanks text</value>
  </data>
  <data name="Trial" xml:space="preserve">
    <value>Trial text</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="DialogBossMacedoniaIntro1" xml:space="preserve">
    <value>Te voy a machacar mierda seca!</value>
  </data>
  <data name="DialogBossMacedoniaIntro2" xml:space="preserve">
    <value>A que te meto...</value>
  </data>
  <data name="DialogBossMacedoniaOutro1" xml:space="preserve">
    <value>Vaya paliza que me has metido, cabronazo!</value>
  </data>
  <data name="DialogBossMacedoniaOutro2" xml:space="preserve">
    <value>Ja je ji jo ju. Pakete!</value>
  </data>
  <data name="DialogBossMacedoniaOutro3" xml:space="preserve">
    <value>Por que? Por que?</value>
  </data>
  <data name="DialogDarkWish1" xml:space="preserve">
    <value>Este debe ser...</value>
  </data>
  <data name="DialogDarkWish2" xml:space="preserve">
    <value>Donde estoy? que es esto? que soy yo?</value>
  </data>
  <data name="DialogDarkWish3" xml:space="preserve">
    <value>Hey! cuidado, es peligroso.</value>
  </data>
  <data name="DialogDarkWish4" xml:space="preserve">
    <value>Y tu... quien eres?</value>
  </data>
  <data name="DialogDarkWish5" xml:space="preserve">
    <value>No hay tiempo. Debe llegar a Cucumber Valley como sea.</value>
  </data>
  <data name="DialogDarkWish6" xml:space="preserve">
    <value>Eh?</value>
  </data>
  <data name="DialogDarkWish7" xml:space="preserve">
    <value>Muevete con ::LS y dispara con ::X. Es todo lo que necesitas</value>
  </data>
  <data name="DialogDarkWish8" xml:space="preserve">
    <value>Ten cuidado, ahi llegan esas malditas frutas!</value>
  </data>
  <data name="DialogDarkWishRemind1" xml:space="preserve">
    <value>Recuerda: muevete con ::LS y dispara con ::X . Es todo lo que necesitas</value>
  </data>
  <data name="DialogDarkWishRemind2" xml:space="preserve">
    <value>Ten cuidado, ahi llegan esas malditas frutas!</value>
  </data>
  <data name="DialogEpilepticBad1" xml:space="preserve">
    <value>Es penoso Wish, hay mas frutas en el suelo que en mi cabeza. Me ayudas a fregar?</value>
  </data>
  <data name="DialogEpilepticBad2" xml:space="preserve">
    <value>...emm oyes eso? es ese mi nombre! tengo que irme...</value>
  </data>
  <data name="DialogEpilepticBad3" xml:space="preserve">
    <value>. . . . . . . . . . . . . . grmf!</value>
  </data>
  <data name="DialogEpilepticBadSpecial" xml:space="preserve">
    <value>Prfff, necesitas aprender el movimiento dash, consulta el menu de skills con ::START</value>
  </data>
  <data name="DialogEpilepticGood1" xml:space="preserve">
    <value>Es realmente increible! te mueves rapido como un pepino!</value>
  </data>
  <data name="DialogEpilepticGood2" xml:space="preserve">
    <value>Gracias Macedonia, eres muy amable</value>
  </data>
  <data name="DialogEpilepticGoodSpecial" xml:space="preserve">
    <value>Con lo ganado deberias adquirir el movimiento dash desde el menu de skills ::START</value>
  </data>
  <data name="DialogEpilepticIntro1" xml:space="preserve">
    <value>Woo macedonia! Yo te ayudare!</value>
  </data>
  <data name="DialogEpilepticIntro2" xml:space="preserve">
    <value>Te lo agradezco Wish, eres una puta de mucho cuidado! :)</value>
  </data>
  <data name="DialogEpilepticMedium1" xml:space="preserve">
    <value>No esta mal, con lo que has cogido aun podremos hacer algunos zumos de buena calidad</value>
  </data>
  <data name="DialogEpilepticMedium2" xml:space="preserve">
    <value>Y si los bebieras tu no estariamos ante un caso de canibalismo?</value>
  </data>
  <data name="DialogEpilepticMedium3" xml:space="preserve">
    <value>Mmm, cierto</value>
  </data>
  <data name="DialogEpilepticMediumSpecial" xml:space="preserve">
    <value>Lo podras hacer mejor con un dash. Consulta el menu de skills ::START</value>
  </data>
  <data name="DialogLearnDash" xml:space="preserve">
    <value>Mejor que aprendas cuanto antes el movimiento dash, mira el menu de skills ahora</value>
  </data>
  <data name="DialogOnionIntro1" xml:space="preserve">
    <value>Hola! Necesito saber como llegar a Ciudad Vegetal</value>
  </data>
  <data name="DialogOnionIntro2" xml:space="preserve">
    <value>Hey chico, es por ahi. Pero el rey tomate y sus tropas vienen por ese camino. Nos quieren invadir!</value>
  </data>
  <data name="DialogOnionIntro3" xml:space="preserve">
    <value>Yo os ayudare, asi podre llegar a Ciudad Vegetal!</value>
  </data>
  <data name="DialogOnionIntro4" xml:space="preserve">
    <value>Genial! Te podemos ayudar prestandote el arma legendaria del pueblo: la Garlic Gun!</value>
  </data>
  <data name="DialogOnionIntro5" xml:space="preserve">
    <value>Wow! parece muy poderosa!</value>
  </data>
  <data name="DialogOnionIntro6" xml:space="preserve">
    <value>Presionando ::RS podras disparar en cualquier direccion! Wo! Ya llegan los tomates!</value>
  </data>
  <data name="DialogTomatoAttack1" xml:space="preserve">
    <value>Cobardes... no os necesito! Ahora veras! Hahaha</value>
  </data>
  <data name="DialogTomatoComes1" xml:space="preserve">
    <value>Acabare contigo sucia perra!</value>
  </data>
  <data name="DialogTomatoComes2" xml:space="preserve">
    <value>Tu eres gilipollas</value>
  </data>
  <data name="DialogTomatoComes3" xml:space="preserve">
    <value>Adelante tomatinaaaa!!!</value>
  </data>
  <data name="MessageNewSkills" xml:space="preserve">
    <value>buy new skills! press ::BACK</value>
  </data>
</root>